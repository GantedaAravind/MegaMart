{"version":3,"file":"static/js/525.063df216.chunk.js","mappings":"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","sources":["components/ChangeUserRole.js","pages/AllUsers.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ROLE from \"../common/role\";\nimport { MdOutlineClose } from \"react-icons/md\";\nimport SummaryApi from \"../common\";\nimport toast from \"react-hot-toast\";\nimport playSound from \"../common/playSound\";\n\nconst ChangeUserRole = (props) => {\n  const { name, email, role, onClose, userId,callFunc} = props;\n  // console.log(userId);\n  const [userRole, setUserRole] = useState(role);\n\n  const handleOnChangeSelect = (event) => {\n    // console.log(event.target.value);\n    setUserRole(event.target.value);\n  };\n\n  const [updateLoading,setUpdateLoading] = useState(false);\n  const updateUserRole = async () => {\n    setUpdateLoading(true);\n    try {\n      // playSound();\n      const fetchResponce = await fetch(SummaryApi.updateUser.url, {\n        method: SummaryApi.updateUser.method,\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userId: userId,\n          role: userRole,\n        }),\n      });\n      const fetchData = await fetchResponce.json();\n      // console.log(fetchData);\n      if (fetchData.success) {\n        toast.success(fetchData.message);\n        onClose();\n        callFunc();\n      } else {\n        toast.error(fetchData.message);\n      }\n    } catch (err) {\n      toast.error(\"Some thing went Wrong...ðŸ˜¯\");\n    }\n    setUpdateLoading(false);\n  };\n\n  return (\n    <div className=\"absolute top-0 left-0 right-0 bottom-0  w-full h-full z-10 flex justify-between items-center bg-slate-200 bg-opacity-50 \">\n      <div className=\"w-full  mx-auto bg-white shadow-md p-4 max-w-sm\">\n        <button className=\"block  ml-auto\" onClick={onClose}>\n          <MdOutlineClose />\n        </button>\n        <h1 className=\"pb-4 text-lg font-medium\">Change User Role</h1>\n        <p>Name : {name}</p>\n        <p>Email : {email}</p>\n        <div className=\"flex items-center justify-between my-4 gap-1\">\n          <p>Role : </p>\n          <select\n            className=\"border-2 px-4 py-1 \"\n            value={userRole}\n            onChange={handleOnChangeSelect}\n          >\n            {Object.values(ROLE).map((item, idx) => {\n              return (\n                <option value={item} key={idx}>\n                  {item}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <button\n          className=\" disabled:opacity-60 disabled:cursor-not-allowed  w-fit mx-auto block py-1  px-3 rounded-full bg-red-600 text-white hover:bg-red-700\"\n          onClick={()=>{\n            playSound();\n            updateUserRole();\n          }\n        }\n          disabled = {updateLoading}\n        >\n          Change Role\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangeUserRole;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport SummaryApi from \"../common\";\nimport moment from \"moment\";\nimport toast from \"react-hot-toast\";\nimport { MdModeEdit } from \"react-icons/md\";\nimport ChangeUserRole from \"../components/ChangeUserRole\";\nimport Context from \"../context\";\nimport playSound from \"../common/playSound\";\n\nconst AllUsers = () => {\n  const [allUsers, setAllUsers] = useState([]);\n  const [openUpdateUser, setOpenUpdateUser] = useState(false);\n  const [updateUserDetails, setUpdateUserDetails] = useState({\n    name: \"\",\n    email: \"\",\n    role: \"\",\n    _id: \"\",\n  });\n\n  const fetchAllUsers = async () => {\n    const res = await fetch(SummaryApi.allUsers.url, {\n      method: SummaryApi.allUsers.method,\n      credentials: \"include\",\n    });\n    const data = await res.json();\n\n    if (data.success) {\n      setAllUsers(data.data);\n    } else {\n      toast.error(data.message);\n    }\n  };\n  const context = useContext(Context);\n\n  useEffect(() => {\n    fetchAllUsers();\n  }, []);\n\n  return (\n    <div\n      className={`pb-4`}\n    >\n      <table\n        className={`transition-all duration-1000  w-full border-2 border-red-500  ${\n          context.theme == \"dark\"\n            ? \" text-white bg-black\"\n            : \" text-black bg-white\"\n        }`}\n      >\n        <thead>\n          <tr\n            className={`border-2 text-start transition-all duration-1000 border-red-500 ${\n              context.theme == \"dark\"\n                ? \" text-black bg-white\"\n                : \" text-white bg-black\"\n            } `}\n          >\n            <th className=\"border-2 border-red-500\">SNO.</th>\n            <th className=\"border-2 border-red-500\">Name</th>\n            <th className=\"border-2 border-red-500\">Email</th>\n            <th className=\"border-2 border-red-500\">Role</th>\n            <th className=\"border-2 border-red-500\">Created Date</th>\n            <th className=\"border-2 border-red-500\">Action</th>\n          </tr>\n        </thead>\n        <tbody\n          className={`transition-all duration-1000 ${\n            context.theme == \"dark\"\n              ? \" text-white bg-black\"\n              : \" text-black bg-white\"\n          }`}\n        >\n          {allUsers.map((item, idx) => {\n            return (\n              <tr key={idx} className=\"text-center \">\n                <td className=\"border-2 border-red-500\">{idx + 1}</td>\n                <td className=\"border-2 border-red-500\">{item.name}</td>\n                <td className=\"border-2 border-red-500\">{item.email}</td>\n                <td className=\"border-2 border-red-500\">{item.role}</td>\n                <td className=\"border-2 border-red-500\">\n                  {moment(item.createdAt).format(\"LL\")}\n                </td>\n                <td className=\"border-2 border-red-500\">\n                  <button\n                    className={`${\n                      context.theme == \"dark\"\n                        ? \" bg-black hover:bg-green-500\"\n                        : \"bg-white hover:bg-green-500\"\n                    }  hover:text-white p-2 rounded-full cursor-pointer`}\n                    onClick={() => {\n                      playSound();\n                      setUpdateUserDetails(item);\n                      setOpenUpdateUser(true);\n                    }}\n                  >\n                    <MdModeEdit />\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {openUpdateUser && (\n        <ChangeUserRole\n          onClose={() => {\n            setOpenUpdateUser(false);\n          }}\n          name={updateUserDetails.name}\n          email={updateUserDetails.email}\n          role={updateUserDetails.role}\n          userId={updateUserDetails._id}\n          callFunc={fetchAllUsers}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default AllUsers;\n"],"names":["props","name","email","role","onClose","userId","callFunc","userRole","setUserRole","useState","updateLoading","setUpdateLoading","_jsx","className","children","_jsxs","onClick","MdOutlineClose","value","onChange","event","target","Object","values","ROLE","map","item","idx","playSound","async","fetchResponce","fetch","SummaryApi","updateUser","url","method","credentials","headers","body","JSON","stringify","fetchData","json","success","toast","message","error","err","updateUserRole","disabled","AllUsers","allUsers","setAllUsers","openUpdateUser","setOpenUpdateUser","updateUserDetails","setUpdateUserDetails","_id","fetchAllUsers","res","data","context","useContext","Context","useEffect","theme","moment","createdAt","format","MdModeEdit","ChangeUserRole"],"sourceRoot":""}